buildscript {
	repositories {
		jcenter()
		maven {
			name "forge"
			url "http://files.minecraftforge.net/maven/"
		}
	}
	dependencies {
		classpath "net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT"
	}
}

plugins {
	id "maven"
	id "com.github.johnrengelman.shadow" version "1.2.2"
	id "com.matthewprenger.cursegradle" version "1.0.5"
	id "org.ajoberstar.grgit" version "1.3.2"
}

apply plugin: "net.minecraftforge.gradle.forge"

import org.ajoberstar.grgit.*

ext.repo = Grgit.open(file("."))

version = mc_version + "-" + mod_version

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

// Minecraft/Forge
minecraft {
	version = mc_version + "-" + forge_version
	runDir = "run"

	mappings = mcp_mappings

	replaceIn "shadowtweaks/ShadowTweaks.java"
	replace "@VERSION@", mod_version
}

processResources {
	inputs.property "version", project.version
	inputs.property "mcversion", mc_version

	from (sourceSets.main.resources.srcDirs) {
		include 'mcmod.info'
		expand 'version': project.version, 'mcversion': mc_version
	}
	from (sourceSets.main.resources.srcDirs) {
		exclude 'mcmod.info'
	}
}

repositories {
	jcenter()
	maven {
		name "shadowfacts"
		url "http://mvn.rx14.co.uk/shadowfacts/"
	}
}

dependencies {
	deobfCompile group: "net.shadowfacts", name: "ShadowMC", version: mc_version + "-" + shadowmc_version

	compile group: "com.squareup.retrofit", name: "retrofit", version: "1.9.0"
}

shadowJar {
	classifier = ""
	dependencies {
		include(dependency("com.squareup.retrofit:retrofit:*"))
	}
}

tasks.build.dependsOn sourceJar, shadowJar

artifacts {
	archives shadowJar
	archives sourceJar
}

task (release, dependsOn: ["generateChangelog", "tagRelease", "curseforge"])

task(generateChangelog) << {
	def changelog = ""
	def commits = repo.log {
		range(file("gradle/last-release-commit.txt").txt, "HEAD")
	}
	commits.each {
		changelog = "- " + it.fullMessage + changelog
	}
	file("changelog.txt").text = changelog
	file("gradle/last-release-commit").text = commits.first().id
}

task(tagRelease) << {
	repo.tag.add {
		name = version
		message = "Release ${version}"
	}
	repo.push(tags: true)
}

curseforge {
	apiKey = project.hasProperty("curseForgeApiKey") ? project.curseForgeApiKey : ""

	project {
		id = "236006"

		mainArtifact(shadowJar) {
			releaseType = "beta"
			changelog = file("changelog.txt").text
		}
	}
}

tasks.curseforge.mustRunAfter generateChangelog